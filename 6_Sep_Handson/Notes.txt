Agenda
Class Modifiers-public,internal, Abstract,Sealed,Static and partial, this keyword,
Extension Methods

Questions:
1) What is the default access specifier of a class?
  ----Private
2) is there a default access specifier for a interface, and if its there what is it?
  ----No,it must be specified explicity, and may be considered as Internal/private.
3) what is the default access specifier for interface members
  ----No Default , No access specifier is allowed
4) Can a abstract class have a private member?
  ---Yes
5) Can a abstract class, abstract method be private?
  --Yes
6) Can Interface inherit abstract class?
  ---No, interface can only inherit interface
7) Can a abstract class inherit interface?
  --Yes
8) Can I inherit abstract class as well as interface in a class?
  --Yes
9)  Can I make a abstract class private?
 ---no,no class could be made private,protected, protected internal etc

------------------------------------------------------------------------------------

Abstract Class & Interface

                 Abstract Class           |                Interface
                                      Difference
  1)multiple inheritance is not supported |   1)multiple inheritance is supported                                                                
  2) static variable is allowed           |   2)static variable is not allowed                                                  
  3)sealed is allowed but with override   |   3)sealed is not allowed                                                                          
  4) it can provide implementation        |   4) No implementation allowed,only decalaration                                            
  5)Abstract Keyword                      |   5) Interface Keyword
  6) abstract member are declared using   |   6) No Such keyword exist Here.
         abstract kwyword                 |
                                    
Similarities                                             
 1) Both are used for inheritance
 2) Object instantiation not possible for both of them
 3) no default access specifier for both

WHICH TO USE WHEN?
1) if some member implementation is known but others can be overridden use abstract classes.
2) if none of the implementations are fixed, then just declare members and 
   leave it to the classes to implement as per requirement.
           


HANDS-ON
1) create a abstract class Person, with a abstract method Work.
   Implment the Person class in multiple classes like Employee,Manager and clerk.

2) Create a interface IBank with method PrintBalance, CalculateInterest

3) Create 2 classes Saving and Current.
   Inherit and implement Ibank interface.

4) Write specific methods in the Saving and current Class to calculateInterest.
    (saving account interest rate 4 % and current is 2%)

5)Write extension methods for Saving and Current Account class to 
    Withdraw, taking amt as parameter.

6)Same ways write extension method for Deposit as well.

7)Write a method to calculate the number of days deposit amt kept in the bank.







